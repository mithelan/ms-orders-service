apiVersion: apps/v1
kind: Deployment
metadata:
  name: orders-service-app
  namespace: orders
  labels:
    app: orders-service-app
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: orders-service-app
  template:
    metadata:
      labels:
        app: orders-service-app
    spec:
      containers:
        - name: orders-service-container
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          ports:
            - containerPort: {{ .Values.service.port }}
          env:
            - name: DATABASE
              value: "{{ .Values.env.DATABASE }}"
            - name: DB_PORT
              value: "{{ .Values.env.DB_PORT }}"
            - name: HOST
              value: "{{ .Values.env.HOST }}"
            - name: PASSWORD
              value: "{{ .Values.env.PASSWORD }}"
            - name: PORT
              value: "{{ .Values.env.PORT }}"
            - name: USERNAME
              value: "{{ .Values.env.USERNAME }}"
            - name: GAMES_ENDPOINT
              value: "{{ .Values.env.GAMES_ENDPOINT }}"
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 10
            periodSeconds: 5
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.service.port }}
            initialDelaySeconds: 15
            periodSeconds: 20
